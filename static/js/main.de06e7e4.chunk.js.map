{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterTodoStatus","TodoList","todos","selectedTodoId","selectTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","onChange","filter","handleStatusChanged","useCallback","event","status","target","value","handleSearchTitleChanged","searchTitle","toLowerCase","handleSearchTitleClearClicked","undefined","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","removeTodo","useState","selectedTodo","setSelectedTodo","user","setUser","useEffect","newSelectedTodo","find","fetchUser","a","userId","userData","href","email","name","App","setTodos","todoId","setTodoId","setFilter","fetchData","todosData","length","visibleTodos","useMemo","newVisibleTodos","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de06e7e4.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\n\nexport enum FilterTodoStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\nexport interface IFilter {\n  status: FilterTodoStatus;\n  searchTitle: string;\n}\n\nexport type OnFilterChange = (filter: IFilter) => void;\ninterface Props {\n  filter: IFilter;\n  onChange: OnFilterChange;\n}\n\nexport const TodoFilter: React.FC<Props> = ({ onChange, filter }) => {\n  const handleStatusChanged = useCallback<\n  React.ChangeEventHandler<HTMLSelectElement>\n  >(\n    (event) => {\n      if (onChange) {\n        const status = event.target.value as FilterTodoStatus;\n\n        if (filter.status !== status) {\n          onChange({ ...filter, status });\n        }\n      }\n    },\n    [filter],\n  );\n\n  const handleSearchTitleChanged = useCallback<\n  React.ChangeEventHandler<HTMLInputElement>\n  >(\n    (event) => {\n      if (onChange) {\n        const searchTitle = event.target.value.toLowerCase();\n\n        if (filter.searchTitle !== searchTitle) {\n          onChange({ ...filter, searchTitle });\n        }\n      }\n    },\n    [filter],\n  );\n\n  const handleSearchTitleClearClicked = useCallback<\n  React.MouseEventHandler<HTMLButtonElement>\n  >(() => {\n    if (onChange !== undefined) {\n      const searchTitle = '';\n\n      if (filter.searchTitle !== searchTitle) {\n        onChange({ ...filter, searchTitle });\n      }\n    }\n  }, [filter]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.status}\n            onChange={handleStatusChanged}\n          >\n            <option value={FilterTodoStatus.All}>All</option>\n            <option value={FilterTodoStatus.Active}>Active</option>\n            <option value={FilterTodoStatus.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.searchTitle}\n          onChange={handleSearchTitleChanged}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filter.searchTitle !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleSearchTitleClearClicked}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoId: number;\n  selectTodo: (todoId: number) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        const { id, title, completed } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodoId === id,\n            })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {\n                todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )\n              }\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={completed ? 'has-text-success' : 'has-text-danger'}>\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodoId === id ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectTodo(0);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectTodo(id);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodoId: number;\n  removeTodo: () => void;\n  todos: Todo[];\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodoId,\n  removeTodo,\n  todos,\n}) => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | undefined>();\n  const [user, setUser] = useState<User | null>();\n\n  useEffect(() => {\n    const newSelectedTodo = todos.find((todo) => todo.id === selectedTodoId);\n\n    setSelectedTodo(newSelectedTodo);\n  }, [selectedTodoId]);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      const fetchUser = async () => {\n        try {\n          const userData = await getUser(selectedTodo.userId);\n\n          setUser(userData);\n        } catch {\n          setUser(null);\n        }\n      };\n\n      fetchUser();\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedTodo || !user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={removeTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=>Done</strong> */}\n              <strong\n                className={classNames({\n                  'has-text-success': selectedTodo.completed,\n                  'has-text-danger': !selectedTodo.completed,\n                })}\n              >\n                {selectedTodo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { FilterTodoStatus, IFilter, TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n\n  const [filter, setFilter] = useState<IFilter>({\n    status: FilterTodoStatus.All,\n    searchTitle: '',\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const todosData = await getTodos();\n\n        setTodos(todosData);\n      } catch {\n        if (!todos.length) {\n          setTodos([]);\n        }\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const visibleTodos: Todo[] = useMemo(() => {\n    if (filter.status === FilterTodoStatus.All && filter.searchTitle === '') {\n      return todos;\n    }\n\n    let newVisibleTodos = todos;\n\n    if (filter.searchTitle !== '') {\n      newVisibleTodos = newVisibleTodos.filter((todo) => todo.title.toLowerCase().includes(filter.searchTitle));\n    }\n\n    if (filter.status !== FilterTodoStatus.All) {\n      const completed = filter.status === FilterTodoStatus.Completed;\n\n      newVisibleTodos = newVisibleTodos.filter(\n        (todo) => todo.completed === completed,\n      );\n    }\n\n    if (newVisibleTodos) {\n      return newVisibleTodos;\n    }\n\n    return [];\n  }, [todos, filter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filter={filter} onChange={setFilter} />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodoId={todoId}\n                  selectTodo={setTodoId}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {todoId !== 0 && (\n        <TodoModal\n          selectedTodoId={todoId}\n          removeTodo={() => {\n            setTodoId(0);\n          }}\n          todos={visibleTodos}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}