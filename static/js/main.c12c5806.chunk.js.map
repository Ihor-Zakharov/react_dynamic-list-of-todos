{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","selectTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","onChange","filter","handleStatusChanged","useCallback","event","undefined","status","target","value","handleSearchTitleChanged","searchTitle","trim","toLowerCase","handleSearchTitleClearClicked","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","removeTodo","useState","setTodo","user","setUser","useEffect","todoId","result","find","userId","href","email","name","App","setTodos","filteredTodos","setFilteredTodos","setTodoId","setFilter","newFilteredTodos","includes","length","newTodoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c12c5806.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoId: number;\n  selectTodo: (todoId: number) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        const { id, title, completed } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodoId === id,\n            })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {\n                todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )\n              }\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={completed ? 'has-text-success' : 'has-text-danger'}>\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodoId === id ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectTodo(0);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectTodo(id);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React, { useCallback } from 'react';\n\nexport type FilterTodoStatus = 'all' | 'active' | 'completed';\nexport interface IFilter {\n  status: FilterTodoStatus;\n  searchTitle: string;\n}\n\nexport type OnFilterChange = (filter: IFilter) => void;\ninterface Props {\n  filter: IFilter;\n  onChange?: OnFilterChange;\n}\n\nexport const TodoFilter: React.FC<Props> = ({ onChange, filter }) => {\n  const handleStatusChanged = useCallback<\n  React.ChangeEventHandler<HTMLSelectElement>\n  >(\n    (event) => {\n      if (onChange !== undefined) {\n        const status = event.target.value as FilterTodoStatus;\n\n        if (filter.status !== status) {\n          onChange({ ...filter, status });\n        }\n      }\n    },\n    [filter],\n  );\n\n  const handleSearchTitleChanged = useCallback<\n  React.ChangeEventHandler<HTMLInputElement>\n  >(\n    (event) => {\n      if (onChange !== undefined) {\n        const searchTitle = event.target.value.trim().toLowerCase();\n\n        if (filter.searchTitle !== searchTitle) {\n          onChange({ ...filter, searchTitle });\n        }\n      }\n    },\n    [filter],\n  );\n\n  const handleSearchTitleClearClicked = useCallback<\n  React.MouseEventHandler<HTMLButtonElement>\n  >(() => {\n    if (onChange !== undefined) {\n      const searchTitle = '';\n\n      if (filter.searchTitle !== searchTitle) {\n        onChange({ ...filter, searchTitle });\n      }\n    }\n  }, [filter]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.status}\n            onChange={handleStatusChanged}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.searchTitle}\n          onChange={handleSearchTitleChanged}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filter.searchTitle !== '' && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleSearchTitleClearClicked}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n\nexport const getTodo = (todoId: number) => {\n  return getTodos()\n    .then(result => result.find(todo => todo.id === todoId));\n};\n","import React, { useEffect, useState } from 'react';\nimport { getTodo, getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodoId: number;\n  removeTodo: () => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodoId, removeTodo }) => {\n  const [todo, setTodo] = useState<Todo | undefined>();\n  const [user, setUser] = useState<User | undefined>();\n\n  useEffect(() => {\n    getTodo(selectedTodoId).then((result) => setTodo(result));\n  }, [selectedTodoId]);\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId).then((result) => setUser(result));\n    }\n  }, [todo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!todo || !user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={removeTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=>Done</strong> */}\n              <strong\n                className={\n                  todo.completed ? 'has-text-success' : 'has-text-danger'\n                }\n              >\n                {todo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { IFilter, TodoFilter } from './components/TodoFilter';\n// import { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState<number>(0);\n\n  const [filter, setFilter] = useState<IFilter>({\n    status: 'all',\n    searchTitle: '',\n  });\n\n  useEffect(() => {\n    getTodos().then((result) => setTodos(result));\n  }, []);\n\n  useEffect(() => {\n    let newFilteredTodos = todos;\n\n    if (filter.searchTitle !== '') {\n      newFilteredTodos = newFilteredTodos.filter((todo) => todo.title.toLowerCase().includes(filter.searchTitle));\n    }\n\n    if (filter.status !== 'all') {\n      const completed = filter.status === 'completed';\n\n      newFilteredTodos = newFilteredTodos.filter(\n        (todo) => todo.completed === completed,\n      );\n    }\n\n    setFilteredTodos(newFilteredTodos);\n  }, [todos, filter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filter={filter} onChange={setFilter} />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodoId={todoId}\n                  selectTodo={(newTodoId) => {\n                    setTodoId(newTodoId);\n                  }}\n                />\n              ) : (\n                <Loader />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {todoId !== 0 && (\n        <TodoModal\n          selectedTodoId={todoId}\n          removeTodo={() => {\n            setTodoId(0);\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}